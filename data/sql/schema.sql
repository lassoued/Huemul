CREATE TABLE cadastral_data (id BIGINT AUTO_INCREMENT, circunscripcion VARCHAR(10) NOT NULL, seccion VARCHAR(10), tipo VARCHAR(255), tipo_numero VARCHAR(10), partida_nro VARCHAR(10), parcela VARCHAR(10), uf VARCHAR(10), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE formu (id BIGINT AUTO_INCREMENT, user_id INT, name VARCHAR(100) NOT NULL, description LONGTEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE item (id BIGINT AUTO_INCREMENT, group_id INT, title VARCHAR(100) NOT NULL, description LONGTEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX group_id_idx (group_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE item_formu (form_id BIGINT, item_id BIGINT, PRIMARY KEY(form_id, item_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE location (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE _procedure (id BIGINT AUTO_INCREMENT, cadastral_data_id BIGINT, formu_id BIGINT, number VARCHAR(50) NOT NULL, dossier VARCHAR(255), is_finished TINYINT(1) DEFAULT '0', revisions_count BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX formu_id_idx (formu_id), INDEX cadastral_data_id_idx (cadastral_data_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE profession (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, description LONGTEXT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE profile (id BIGINT AUTO_INCREMENT, sf_guard_user_id INT, first_name VARCHAR(100) NOT NULL, last_name VARCHAR(100) NOT NULL, profesion_id BIGINT, birth_date DATE, documment_type VARCHAR(255) DEFAULT 'dni', documment VARCHAR(12), phone VARCHAR(40), movil VARCHAR(40), email VARCHAR(60), addres VARCHAR(100), country VARCHAR(50), mugshot VARCHAR(100), INDEX sf_guard_user_id_idx (sf_guard_user_id), INDEX profesion_id_idx (profesion_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE province (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE revision (id BIGINT AUTO_INCREMENT, number BIGINT, parent_id BIGINT, procedure_id BIGINT, revision_state_id SMALLINT, creator_id INT, block TINYINT(1) DEFAULT '0', description LONGTEXT NOT NULL, file VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX creator_id_idx (creator_id), INDEX procedure_id_idx (procedure_id), INDEX revision_state_id_idx (revision_state_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE revision_item (id BIGINT AUTO_INCREMENT, item_id BIGINT, revision_id BIGINT, state VARCHAR(255) DEFAULT 'nc', UNIQUE INDEX myIndexs_idx (item_id, revision_id), INDEX item_id_idx (item_id), INDEX revision_id_idx (revision_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE revision_state (id SMALLINT AUTO_INCREMENT, title VARCHAR(50) NOT NULL, description VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE user_procedure (user_id INT, procedure_id BIGINT, PRIMARY KEY(user_id, procedure_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE formu ADD CONSTRAINT formu_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE item ADD CONSTRAINT item_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id);
ALTER TABLE item_formu ADD CONSTRAINT item_formu_item_id_item_id FOREIGN KEY (item_id) REFERENCES item(id);
ALTER TABLE item_formu ADD CONSTRAINT item_formu_form_id_formu_id FOREIGN KEY (form_id) REFERENCES formu(id);
ALTER TABLE _procedure ADD CONSTRAINT _procedure_formu_id_formu_id FOREIGN KEY (formu_id) REFERENCES formu(id);
ALTER TABLE _procedure ADD CONSTRAINT _procedure_cadastral_data_id_cadastral_data_id FOREIGN KEY (cadastral_data_id) REFERENCES cadastral_data(id);
ALTER TABLE profile ADD CONSTRAINT profile_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE profile ADD CONSTRAINT profile_profesion_id_profession_id FOREIGN KEY (profesion_id) REFERENCES profession(id);
ALTER TABLE revision ADD CONSTRAINT revision_revision_state_id_revision_state_id FOREIGN KEY (revision_state_id) REFERENCES revision_state(id);
ALTER TABLE revision ADD CONSTRAINT revision_procedure_id__procedure_id FOREIGN KEY (procedure_id) REFERENCES _procedure(id);
ALTER TABLE revision ADD CONSTRAINT revision_creator_id_sf_guard_user_id FOREIGN KEY (creator_id) REFERENCES sf_guard_user(id);
ALTER TABLE revision_item ADD CONSTRAINT revision_item_revision_id_revision_id FOREIGN KEY (revision_id) REFERENCES revision(id) ON DELETE CASCADE;
ALTER TABLE revision_item ADD CONSTRAINT revision_item_item_id_item_id FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE;
ALTER TABLE user_procedure ADD CONSTRAINT user_procedure_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_procedure ADD CONSTRAINT user_procedure_procedure_id__procedure_id FOREIGN KEY (procedure_id) REFERENCES _procedure(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
