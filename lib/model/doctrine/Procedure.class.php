<?php

/**
 * Procedure
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Huemul
 * @subpackage model
 * @author     Damian Suarez
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
class Procedure extends BaseProcedure
{
  public function getDossier() {
    return 'In process';
  }

  public function addControlRevision() {
    $singleton = sfContext::getInstance();
    $last_revision = $this->getLastRevision();

    if($last_revision->getRevisionStateId() == 5) {
      $new_control_revision = new Revision();
      
      //$new_control_revision->setNumber($last_revision->getNumber() + 1);
      $new_control_revision->setProcedureId($this->get('id'));
      $new_control_revision->setRevisionStateId(8);
      $new_control_revision->setBlock(false);
      $new_control_revision->setCreatorId($singleton->getUser()->getGuardUser()->getId());

      $new_control_revision->save();

      // add revision items
      $items = Doctrine::getTable('Item')
        ->createQuery('a')
        ->execute();

      foreach ($items as $item) {
        $rev = new RevisionItem();
        $rev->setRevisionId($new_control_revision->get('id'));
        $rev->setItemId($item->get('id'));
        $rev->setState('nc');
        $rev->save();
      }
    }
  }

  public function save(Doctrine_Connection $conn = null) {
    $is_new = $this->isNew();
    $procedure = parent::Save ($conn);

    if ($is_new)
    {

      /*
      $dc=DatoCatastralPeer::retrieveByPK($this->getDatoCatastralId());
      $numero=$dc->getNumero().'-'.$dc->getCircunscripcion().'-'.$dc->getSeccion().'-'.$this->getId();
      $this->setNumero($numero);
      $this->save();
      */

      // singleton
      $singleton = sfContext::getInstance();

      $revision = new Revision();
      $revision->setNumber(0);
      $revision->setProcedureId($this->get('id'));
      $revision->setRevisionStateId(1);      // <- Estado inicial.
      $revision->setBlock(true);	      // <- Bloqueamos la revision.
      $revision->setCreatorId($singleton->getUser()->getGuardUser()->getId());
      $revision->save();
/*
      // Agregamos registro usuario_tramite
      $usuarioTramite = new UsuarioTramite();
      $usuarioTramite->setUserId($singleton->getUser()->getGuardUser()->getId());
      $usuarioTramite->setTramiteId($objTramite);
      $usuarioTramite->setDenominacion('Usuario principal');// <- Estado inicial

      $usuarioTramite->save();
 * 
 */
    }
    else
    {
    /*
    //guarda el numero de tramite en funcion del dato catastral
    $dc=DatoCatastralPeer::retrieveByPK($this->getDatoCatastralId());
    $numero=$dc->getNumero().'-'.$dc->getCircunscripcion().'-'.$dc->getSeccion().'-'.$this->getId();
    $this->setNumero($numero);
    //$this->save();
    return parent::save($con);
    */
    }
  }


  /* revisiones */


  public function getLastRevision() {
    $q = Doctrine_Query::create()
      ->from('Revision r')
      ->leftJoin('r.State s')
      ->where('r.procedure_id = ?', $this->get('id'))
      ->orderBy('r.number Desc');

    return $q->fetchOne();
  }

  public function getNextNumber() {
    return $this->get('number') + 1;
  }

  public function getNextRevisionState() {

    $current = $this->getLastRevision();

    switch ($current->getRevisionStateId()) {
      case 1:
        $state = Doctrine::getTable('RevisionState')->find(5);
      break;

      case 5:
        $state = Doctrine::getTable('RevisionState')->find(5);
      break;

      default:
      break;
    }

    return $state;
  }

  /* override the parent method ***/
  public function getRevisions ($base_query = NULL, $hydrate_method = Doctrine_Core::HYDRATE_RECORD) {

    $q = Doctrine_Query::create()
        ->from('Revision r')
        ->where('r.procedure_id = ?', $this->get('id'))
        ->orderBy('r.number Desc');

    return $q->execute(array(), $hydrate_method);
  }

  public function getCreator() {
    if($this->getFirstRevision()) return $this->getFirstRevision()->getCreator();
  }

  public function getFirstRevision() {
    $q = Doctrine_Query::create()
      ->from('Revision r')
      ->where('r.procedure_id = ?', $this->get('id'))
      ->orderBy('r.number Asc');

    return $q->fetchOne();
  }

  /* para adin generator */
  public function getState() {
    if($this->getLastRevision()) return $this->getLastRevision()->getState();
  }
}
