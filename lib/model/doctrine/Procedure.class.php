<?php

/**
 * Procedure
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Huemul
 * @subpackage model
 * @author     Damian Suarez
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
class Procedure extends BaseProcedure
{
  public function getDossier() {
    return 'In process';
  }

  public function getCurrentRevision() {
    $q = Doctrine_Query::create()
      ->from('Revision r')
      ->leftJoin('r.State s')
      ->where('r.procedure_id = ?', $this->get('id'))
      ->orderBy('r.number Desc');

    return $q->fetchOne();
  }

  public function save(Doctrine_Connection $conn = null) {
    if ($this->isNew())
    {
      $procedure = parent::Save ($conn);

      /*
      $dc=DatoCatastralPeer::retrieveByPK($this->getDatoCatastralId());
      $numero=$dc->getNumero().'-'.$dc->getCircunscripcion().'-'.$dc->getSeccion().'-'.$this->getId();
      $this->setNumero($numero);
      $this->save();
      */

      // singleton
      $singleton = sfContext::getInstance();

      $revision = new Revision();
      $revision->setNumber(0);
      $revision->setProcedureId($this->get('id'));
      $revision->setRevisionStateId(1);      // <- Estado inicial.
      $revision->setBlock(true);	      // <- Bloqueamos la revision.
      $revision->setCreatorId($singleton->getUser()->getGuardUser()->getId());
      $revision->save();
/*
      // Agregamos registro usuario_tramite
      $usuarioTramite = new UsuarioTramite();
      $usuarioTramite->setUserId($singleton->getUser()->getGuardUser()->getId());
      $usuarioTramite->setTramiteId($objTramite);
      $usuarioTramite->setDenominacion('Usuario principal');// <- Estado inicial

      $usuarioTramite->save();
 * 
 */
    }
    else
    {
    /*
    //guarda el numero de tramite en funcion del dato catastral
    $dc=DatoCatastralPeer::retrieveByPK($this->getDatoCatastralId());
    $numero=$dc->getNumero().'-'.$dc->getCircunscripcion().'-'.$dc->getSeccion().'-'.$this->getId();
    $this->setNumero($numero);
    //$this->save();
    return parent::save($con);
    */
    }
  }
}
