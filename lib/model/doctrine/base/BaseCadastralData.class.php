<?php

/**
 * BaseCadastralData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $circunscripcion
 * @property string $seccion
 * @property enum $tipo
 * @property string $tipo_numero
 * @property string $partida_nro
 * @property string $parcela
 * @property string $uf
 * @property Procedure $Procedure
 * 
 * @method integer       getId()              Returns the current record's "id" value
 * @method string        getCircunscripcion() Returns the current record's "circunscripcion" value
 * @method string        getSeccion()         Returns the current record's "seccion" value
 * @method enum          getTipo()            Returns the current record's "tipo" value
 * @method string        getTipoNumero()      Returns the current record's "tipo_numero" value
 * @method string        getPartidaNro()      Returns the current record's "partida_nro" value
 * @method string        getParcela()         Returns the current record's "parcela" value
 * @method string        getUf()              Returns the current record's "uf" value
 * @method Procedure     getProcedure()       Returns the current record's "Procedure" value
 * @method CadastralData setId()              Sets the current record's "id" value
 * @method CadastralData setCircunscripcion() Sets the current record's "circunscripcion" value
 * @method CadastralData setSeccion()         Sets the current record's "seccion" value
 * @method CadastralData setTipo()            Sets the current record's "tipo" value
 * @method CadastralData setTipoNumero()      Sets the current record's "tipo_numero" value
 * @method CadastralData setPartidaNro()      Sets the current record's "partida_nro" value
 * @method CadastralData setParcela()         Sets the current record's "parcela" value
 * @method CadastralData setUf()              Sets the current record's "uf" value
 * @method CadastralData setProcedure()       Sets the current record's "Procedure" value
 * 
 * @package    Huemul
 * @subpackage model
 * @author     Damian Suarez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCadastralData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cadastral_data');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('circunscripcion', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('seccion', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('tipo', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'manzana',
              1 => 'quinta',
              2 => 'chacra',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('tipo_numero', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('partida_nro', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('parcela', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('uf', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));


        $this->setAttribute(Doctrine_Core::ATTR_EXPORT, Doctrine_Core::EXPORT_ALL);

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Procedure', array(
             'local' => 'id',
             'foreign' => 'cadastral_data_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}